# vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:fdm=marker:dsn=1:ft=conf:

# BASE OPTIONS # {{{

# PREFIX: C-a # 
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

# start windows at 0
set -g base-index 1

# vi mode
setw -g mode-keys vi

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# dynamic window title
set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
set-window-option -g automatic-rename on # auto name


# Set window notifications
set-option -g monitor-activity on
set-option -g visual-activity on


# config reload
bind-key R source-file ~/.config/tmux/conf \; display-message "tmux.conf reloaded."
bind-key r refresh-client

bind-key L clear-history

# you know me, I like my shiftless colons (pun? oops)
bind-key \; command-prompt
bind-key : command-prompt

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any
set -g visual-bell on
set -g bell-on-alert on

# on-screen time for display-panes in ms
set -g display-panes-time 2000

set -g lock-command vlock

# correct term for 256 colours
set-option -g default-terminal "screen-256color-s"

set-window-option -g aggressive-resize on

# initialize sessions
#bind S source-file ~/.config/tmux/standard
#bind I source-file ~/.config/tmux/irssi

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# }}}

# MOUSE {{{1
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
 
# 1}}}

# KEYS: Panes and Window # {{{

# Disabled - orphans... 
#bind-key space next-window
#bind-key bspace previous-window
#bind-key enter next-layout
#bind-key a last-pane
#bind-key q display-panes
#bind-key c new-window
#bind-key t next-window
#bind-key T previous-window
#bind-key C-o rotate-window

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key l select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# }}}

# KEYS: Copy / Paste# {{{ 
bind-key [ copy-mode
bind Escape copy-mode
bind-key ] paste-buffer
bind-key -t vi-copy v begin-selection
bind y run "tmux show-buffer | xclip"
bind p run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"
set-window-option -g display-panes-time 1500
# }}}

# KEYS: ****  OSXopy / paste solution (PARTIAL) TODO: FINISH# {{{
#if '[ $IS_OSX = true ]' 'set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"'

  # TODO: reintegrate github.com awesome for OSX tmux copy... 
  # I spend wayy too much time in xdg environments to care about OSX right now
  # But when travelling this will screw me.
  # TODO: Test andriod SSH copy/paste.
  
  # Enable native Mac OS X copy/paste

 # }}}

# KEYS: Fluff   # {{{1
# quick view of processes
bind '~' split-window -v -p 50 "htop"

# killing things... windows & servers
bind-key k confirm kill-window
bind-key K confirm kill-session

set-window-option -g window-status-bell-fg white
set-window-option -g window-status-bell-bg red
set-window-option -g window-status-bell-attr bright

set-window-option -g window-status-content-fg white
set-window-option -g window-status-content-bg magenta
set-window-option -g window-status-content-attr bright

set-window-option -g window-status-activity-fg white
set-window-option -g window-status-activity-bg green
set-window-option -g window-status-activity-attr bright

# }}} 

# PRETTY: Panes # {{{1
set -g pane-border-fg blue
set -g pane-border-bg default
set -g pane-active-border-fg blue
set -g pane-active-border-bg default
# }}}

# P RETTY: Status Bar# {{{
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# default statusbar colors
set -g status-fg white
set -g status-bg default

# Statusbar starting in X or not
if '[ -n "$DISPLAY" ]' 'source-file ~/.config/tmux/inx'
if '[ -z "$DISPLAY" ]' 'source-file ~/.config/tmux/xless'
 
 
 # }}}


